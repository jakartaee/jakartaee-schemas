<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (c) 2009, 2020 Oracle and/or its affiliates. All rights reserved.

    This program and the accompanying materials are made available under the
    terms of the Eclipse Public License v. 2.0, which is available at
    http://www.eclipse.org/legal/epl-2.0.

    This Source Code may also be made available under the following Secondary
    Licenses when the conditions for such availability set forth in the
    Eclipse Public License v. 2.0 are satisfied: GNU General Public License,
    version 2 with the GNU Classpath Exception, which is available at
    https://www.gnu.org/software/classpath/license.html.

    SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0

-->

<ejb-jar xmlns="https://jakarta.ee/xml/ns/jakartaee"
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xsi:schemaLocation="https://jakarta.ee/xml/ns/jakartaee 
	     ejb-jar_5_0.xsd"
	 version="5.0">
  <display-name>Ejb1</display-name>
  <enterprise-beans>
    <session>
      <display-name>PopulateEJB</display-name>
      <ejb-name>foobar1</ejb-name>
      <home>ejbql.PopulateHome</home>
      <remote>ejbql.Populate</remote>
      <ejb-class>ejbql.PopulateBean</ejb-class>
      <session-type>Stateless</session-type>
      <transaction-type>Container</transaction-type>
      <ejb-local-ref>
        <ejb-ref-name>ejb/OrderRef</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <local-home>ejbql.OrderHome</local-home>
        <local>ejbql.Order</local>
        <ejb-link>OrderEJB</ejb-link>
      </ejb-local-ref>
      <ejb-local-ref>
        <ejb-ref-name>ejb/OrderRef</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <local-home>ejbql.OrderHome</local-home>
        <local>ejbql.Order</local>
        <ejb-link>OrderEJB</ejb-link>
      </ejb-local-ref>
      <ejb-local-ref>
        <ejb-ref-name>ejb/ProductRef</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <local-home>ejbql.ProductHome</local-home>
        <local>ejbql.Product</local>
        <ejb-link>ProductEJB</ejb-link>
      </ejb-local-ref>
      <ejb-local-ref>
        <ejb-ref-name>ejb/CustomerRef</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <local-home>ejbql.CustomerHome</local-home>
        <local>ejbql.Customer</local>
        <ejb-link>CustomerEJB</ejb-link>
      </ejb-local-ref>
      <ejb-local-ref>
        <ejb-ref-name>ejb/LineItemRef</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <local-home>ejbql.LineItemHome</local-home>
        <local>ejbql.LineItem</local>
        <ejb-link>LineItemEJB</ejb-link>
      </ejb-local-ref>
      <ejb-local-ref>
        <ejb-ref-name>ejb/AddressRef</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <local-home>ejbql.AddressHome</local-home>
        <local>ejbql.Address</local>
        <ejb-link>AddressEJB</ejb-link>
      </ejb-local-ref>
      <service-ref>
        <description>google service ref</description>
        <service-ref-name>service/GoogleSearch</service-ref-name>
        <service-interface>googleclient.GoogleSearchService</service-interface>
        <wsdl-file>GoogleSearch.wsdl</wsdl-file>
        <jaxrpc-mapping-file>googleclient.model</jaxrpc-mapping-file>
        <handler>
          <description>handler 1</description>
          <handler-name>handler1</handler-name>
          <handler-class>googleclient.ClientHandler</handler-class>
          <init-param>
            <description>param1 description</description>
            <param-name>a</param-name>
            <param-value>b</param-value>
          </init-param>
          <soap-header xmlns:goo="urn:GoogleSearch">goo:DirectoryCategory</soap-header>
          <soap-role>Role1</soap-role>
          <soap-role>Role2</soap-role>
          <port-name>GoogleSearchPort</port-name>
        </handler>
        <handler>
          <description>handler 1</description>
          <handler-name>handler1</handler-name>
          <handler-class>googleclient.ClientHandler</handler-class>
          <init-param>
            <description>param1 description</description>
            <param-name>a</param-name>
            <param-value>b</param-value>
          </init-param>
          <soap-header xmlns:goo="urn:GoogleSearch">goo:DirectoryCategory</soap-header>
          <soap-role>Role1</soap-role>
          <soap-role>Role2</soap-role>
          <port-name>GoogleSearchPort</port-name>
        </handler>
      </service-ref>
      <resource-env-ref>
        <resource-env-ref-name>whatever/POPD</resource-env-ref-name>
        <resource-env-ref-type>jakarta.jms.Queue
        </resource-env-ref-type>
      </resource-env-ref>
      <resource-env-ref>
        <resource-env-ref-name>whatever/POPD</resource-env-ref-name>
        <resource-env-ref-type>jakarta.jms.Queue
        </resource-env-ref-type>
      </resource-env-ref>
      <message-destination-ref>
        <message-destination-ref-name>jms/Stocks</message-destination-ref-name>
        <message-destination-type>jakarta.jms.Queue
        </message-destination-type>
        <message-destination-usage>Produces
        </message-destination-usage>
      </message-destination-ref>
      <message-destination-ref>
        <message-destination-ref-name>jms/Stocks</message-destination-ref-name>
        <message-destination-type>jakarta.jms.Queue
        </message-destination-type>
        <message-destination-usage>Produces
        </message-destination-usage>
      </message-destination-ref>
      <persistence-context-ref>
        <description>description 1</description>
        <persistence-context-ref-name>persistence/context1</persistence-context-ref-name>
        <persistence-unit-name>foo</persistence-unit-name>
        <persistence-property>
          <name>jakarta.persisstence.Foo</name>
          <value>foo</value>
        </persistence-property>
        <persistence-property>
          <name>com.acme.Bar</name>
          <value>foobar</value>
        </persistence-property>
      </persistence-context-ref>
      <persistence-context-ref>
        <persistence-context-ref-name>persistence/context2</persistence-context-ref-name>
        <persistence-context-type>Extended</persistence-context-type>
      </persistence-context-ref>
      <persistence-context-ref>
        <persistence-context-ref-name>persistence/context3</persistence-context-ref-name>
        <persistence-unit-name>../persistence.jar#bar</persistence-unit-name>
        <persistence-context-type>Transaction</persistence-context-type>
      </persistence-context-ref>
      <persistence-context-ref>
        <persistence-context-ref-name>persistence/context4</persistence-context-ref-name>
        <persistence-unit-name>foo</persistence-unit-name>
        <persistence-context-type>Undefined</persistence-context-type> 
      </persistence-context-ref>
      <persistence-unit-ref>
        <persistence-unit-ref-name>persistence/unit1</persistence-unit-ref-name>
        <persistence-unit-name>foo</persistence-unit-name>
      </persistence-unit-ref>
      <persistence-unit-ref>
        <description>description 1</description>
        <description>description 2></description>
        <persistence-unit-ref-name>persistence/unit2</persistence-unit-ref-name>
        <persistence-unit-name>../persistence.jar#foo</persistence-unit-name>
      </persistence-unit-ref>  
      <security-role-ref>
        <role-name>ADMIN</role-name>
        <role-link>Administrator</role-link>
      </security-role-ref>
      <security-role-ref>
        <role-name>MGR</role-name>
        <role-link>BadManager</role-link>
      </security-role-ref>
      <security-role-ref>
        <role-name>EMP</role-name>
        <role-link>Employee</role-link>
      </security-role-ref>
      <security-role-ref>
        <role-name>STAFF</role-name>
        <role-link>Employee</role-link>
      </security-role-ref>
      <security-identity>
        <description xml:lang="en">foobar</description>
        <use-caller-identity></use-caller-identity>
      </security-identity>
    </session>
    <entity>
      <display-name>LineItemEJB</display-name>
      <ejb-name>LineItemEJB</ejb-name>
      <local-home>ejbql.LineItemHome</local-home>
      <local>ejbql.LineItem</local>
      <ejb-class>ejbql.LineItemBean</ejb-class>
      <persistence-type>Container</persistence-type>
      <prim-key-class>java.lang.Integer</prim-key-class>
      <reentrant>false</reentrant>
      <cmp-version>2.x</cmp-version>
      <abstract-schema-name>LineItem</abstract-schema-name>
      <cmp-field>
        <field-name>quantity</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>foo</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>shipped</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>lineitemId</field-name>
      </cmp-field>
      <primkey-field>lineitemId</primkey-field>
      <resource-env-ref>
        <resource-env-ref-name>whatever/POPD</resource-env-ref-name>
        <resource-env-ref-type>jakarta.jms.Queue
        </resource-env-ref-type>
      </resource-env-ref>
      <resource-env-ref>
        <resource-env-ref-name>whatever/POPD</resource-env-ref-name>
        <resource-env-ref-type>jakarta.jms.Queue
        </resource-env-ref-type>
      </resource-env-ref>
      <message-destination-ref>
        <message-destination-ref-name>jms/Stocks</message-destination-ref-name>
        <message-destination-type>jakarta.jms.Queue
        </message-destination-type>
        <message-destination-usage>Produces
        </message-destination-usage>
      </message-destination-ref>
      <message-destination-ref>
        <message-destination-ref-name>jms/Stocks</message-destination-ref-name>
        <message-destination-type>jakarta.jms.Queue
        </message-destination-type>
        <message-destination-usage>Produces
        </message-destination-usage>
      </message-destination-ref>
      <security-identity>
        <description></description>
        <use-caller-identity></use-caller-identity>
      </security-identity>
    </entity>
    <message-driven>
      <display-name>TestMsgBeanEJB</display-name>
      <ejb-name>foobar</ejb-name>
      <ejb-class>ejbql.TestMsgBean</ejb-class>
      <transaction-type>Bean</transaction-type>
      <activation-config>
        <activation-config-property>
            <activation-config-property-name>acknowledgeMode
            </activation-config-property-name>
            <activation-config-property-value>whatever
            </activation-config-property-value>
      </activation-config-property>
      <activation-config-property>
            <activation-config-property-name>destinationMode
            </activation-config-property-name>
            <activation-config-property-value>jakarta.jms.Queue
            </activation-config-property-value>
        </activation-config-property>
      </activation-config>
      <resource-env-ref>
        <resource-env-ref-name>whatever/POPD</resource-env-ref-name>
        <resource-env-ref-type>jakarta.jms.Queue
        </resource-env-ref-type>
      </resource-env-ref>
      <resource-env-ref>
        <resource-env-ref-name>whatever/POPD</resource-env-ref-name>
        <resource-env-ref-type>jakarta.jms.Queue
        </resource-env-ref-type>
      </resource-env-ref>
      <message-destination-ref>
        <message-destination-ref-name>jms/Stocks</message-destination-ref-name>
        <message-destination-type>jakarta.jms.Queue
        </message-destination-type>
        <message-destination-usage>Produces
        </message-destination-usage>
      </message-destination-ref>
      <message-destination-ref>
        <message-destination-ref-name>jms/Stocks</message-destination-ref-name>
        <message-destination-type>jakarta.jms.Queue
        </message-destination-type>
        <message-destination-usage>Produces
        </message-destination-usage>
      </message-destination-ref>
    </message-driven>
    <entity>
      <display-name>ProductEJB</display-name>
      <ejb-name>ProductEJB</ejb-name>
      <home>ejbql.ProductHomeRemote</home>
      <remote>ejbql.ProductRemote</remote>
      <local-home>ejbql.ProductHome</local-home>
      <local>ejbql.Product</local>
      <ejb-class>ejbql.ProductBean</ejb-class>
      <persistence-type>Container</persistence-type>
      <prim-key-class>ejbql.ProductPrimaryKey</prim-key-class>
      <reentrant>false</reentrant>
      <cmp-version>2.x</cmp-version>
      <abstract-schema-name>Product</abstract-schema-name>
      <cmp-field>
        <field-name>age</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>name</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>product_type</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>productId</field-name>
      </cmp-field>
      <security-identity>
        <description></description>
        <use-caller-identity></use-caller-identity>
      </security-identity>
      <query>
        <description></description>
        <query-method>
          <method-name>ejbSelectCollectionDistinctEjb</method-name>
          <method-params />
        </query-method>
        <result-type-mapping>Remote</result-type-mapping>
        <ejb-ql>SELECT DISTINCT l.order FROM LineItem l</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findOrderBy1</method-name>
          <method-params />
        </query-method>
        <ejb-ql>SELECT OBJECT(p) FROM Product p ORDER BY p.name</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findOrderBy3</method-name>
          <method-params />
        </query-method>
        <ejb-ql>SELECT DISTINCT OBJECT(p) FROM Order o, IN(o.products) AS p ORDER BY p.productId, p.product_type</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findOrderBy2</method-name>
          <method-params />
        </query-method>
        <ejb-ql>SELECT OBJECT(p) FROM Order o, IN(o.products) AS p ORDER BY p.productId, p.product_type</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findOrderBy4</method-name>
          <method-params />
        </query-method>
        <ejb-ql>SELECT DISTINCT OBJECT(p) FROM Order o, IN(o.products) AS p ORDER BY p.productId DESC, p.product_type DESC</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>ejbSelectCount8</method-name>
          <method-params />
        </query-method>
        <ejb-ql>SELECT COUNT(p) FROM Order o, IN (o.products) p</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>ejbSelectSetNoDistinctEjb</method-name>
          <method-params />
        </query-method>
        <result-type-mapping>Remote</result-type-mapping>
        <ejb-ql>SELECT l.order FROM LineItem l</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>ejbSelectCount6</method-name>
          <method-params />
        </query-method>
        <ejb-ql>SELECT COUNT(DISTINCT p) FROM Order o, Product p</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>ejbSelectSetDistinctEjb</method-name>
          <method-params />
        </query-method>
        <result-type-mapping>Remote</result-type-mapping>
        <ejb-ql>SELECT DISTINCT l.order FROM LineItem l</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>ejbSelectCount7</method-name>
          <method-params />
        </query-method>
        <ejb-ql>SELECT COUNT(DISTINCT p.product_type) FROM Order o, Product p</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>ejbSelectCollectionDistinctString</method-name>
          <method-params />
        </query-method>
        <ejb-ql>SELECT DISTINCT p.product_type FROM Product p</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>ejbSelectSingleValuedCmrNull1</method-name>
          <method-params />
        </query-method>
        <ejb-ql>SELECT o.sampleLineItem FROM Order o</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>ejbSelectCollectionNoDistinctString</method-name>
          <method-params />
        </query-method>
        <ejb-ql>SELECT p.product_type FROM Product p</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>ejbSelectSingleNullResult</method-name>
          <method-params />
        </query-method>
        <ejb-ql>SELECT o.byteArray FROM Order o WHERE o.orderId = 1</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findUsingIn1</method-name>
          <method-params />
        </query-method>
        <ejb-ql>SELECT DISTINCT OBJECT(p) FROM Product p WHERE p.product_type IN ('soda', 'candy')</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>ejbSelectMin3</method-name>
          <method-params />
        </query-method>
        <ejb-ql>SELECT MIN(o.customer.firstname) FROM Order o</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findUsingIn2</method-name>
          <method-params />
        </query-method>
        <ejb-ql>SELECT DISTINCT OBJECT(p) FROM Product p WHERE p.product_type NOT IN ('soda', 'candy')</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>ejbSelectMin1</method-name>
          <method-params />
        </query-method>
        <ejb-ql>SELECT MIN(o.balance) FROM Order o</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>ejbSelectMin2</method-name>
          <method-params />
        </query-method>
        <ejb-ql>SELECT MIN(o.orderId) FROM Order o</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>ejbSelectSchemaEquality2</method-name>
          <method-params>
            <method-param>ejbql.Address</method-param>
          </method-params>
        </query-method>
        <result-type-mapping>Remote</result-type-mapping>
        <ejb-ql>SELECT OBJECT(o) FROM Order o WHERE o.billing_address = ?1</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>ejbSelectSchemaEquality3</method-name>
          <method-params>
            <method-param>ejbql.Address</method-param>
          </method-params>
        </query-method>
        <result-type-mapping>Remote</result-type-mapping>
        <ejb-ql>SELECT OBJECT(o) FROM Order o WHERE o.shipping_address = ?1</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>ejbSelectSchemaEquality1</method-name>
          <method-params />
        </query-method>
        <result-type-mapping>Remote</result-type-mapping>
        <ejb-ql>SELECT OBJECT(o) FROM Order o WHERE o.billing_address = o.shipping_address</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findUsingMemberOf1</method-name>
          <method-params />
        </query-method>
        <ejb-ql>SELECT DISTINCT OBJECT(p) FROM Product p, Order o WHERE o.billing_address MEMBER OF o.many_to_many AND o.one_to_one = p</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findUsingMemberOf3</method-name>
          <method-params />
        </query-method>
        <ejb-ql>SELECT DISTINCT OBJECT(p) FROM Product p, Order o WHERE o.shipping_address MEMBER OF o.many_to_many AND o.one_to_one = p</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findUsingMemberOf2</method-name>
          <method-params />
        </query-method>
        <ejb-ql>SELECT DISTINCT OBJECT(p) FROM Product p, Order o WHERE o.billing_address NOT MEMBER OF o.many_to_many AND o.one_to_one = p</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findUsingMemberOf5</method-name>
          <method-params />
        </query-method>
        <ejb-ql>SELECT DISTINCT OBJECT(p) FROM Product p, Order o WHERE p MEMBER OF o.products</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findUsingMemberOf4</method-name>
          <method-params />
        </query-method>
        <ejb-ql>SELECT DISTINCT OBJECT(p) FROM Product p, Order o WHERE o.shipping_address NOT MEMBER OF o.many_to_many AND o.one_to_one = p</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findUsingMemberOf6</method-name>
          <method-params>
            <method-param>ejbql.ProductRemote</method-param>
          </method-params>
        </query-method>
        <ejb-ql>SELECT DISTINCT o.one_to_one FROM Order o WHERE ?1 MEMBER OF o.products AND o.one_to_one IS NOT NULL</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findProductsLikeInputParam2</method-name>
          <method-params>
            <method-param>java.lang.String</method-param>
            <method-param>char</method-param>
          </method-params>
        </query-method>
        <ejb-ql>SELECT OBJECT(p) FROM Product p WHERE p.product_type LIKE 's%da' ESCAPE ?2</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findProductsLikeInputParam1</method-name>
          <method-params>
            <method-param>java.lang.String</method-param>
            <method-param>java.lang.Character</method-param>
          </method-params>
        </query-method>
        <ejb-ql>SELECT OBJECT(p) FROM Product p WHERE p.product_type LIKE ?1</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findInputParamIsNull2</method-name>
          <method-params>
            <method-param>int</method-param>
          </method-params>
        </query-method>
        <ejb-ql>SELECT OBJECT(p) FROM Product p WHERE ?1 IS NULL</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findUsingIsEmpty1</method-name>
          <method-params />
        </query-method>
        <ejb-ql>SELECT DISTINCT o.one_to_one FROM Order o WHERE o.many_to_many IS EMPTY</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findInputParamIsNull1</method-name>
          <method-params>
            <method-param>java.lang.String</method-param>
          </method-params>
        </query-method>
        <ejb-ql>SELECT OBJECT(p) FROM Product p WHERE ?1 IS NULL</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findUsingIsEmpty3</method-name>
          <method-params />
        </query-method>
        <ejb-ql>SELECT DISTINCT o.one_to_one FROM Order o WHERE o.lineItems IS NOT EMPTY</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>ejbSelectRemoteReturnTypeMapping</method-name>
          <method-params />
        </query-method>
        <result-type-mapping>Remote</result-type-mapping>
        <ejb-ql>SELECT OBJECT(p) FROM Product p WHERE p.productId = 1  AND p.product_type = 'soda'</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findUsingIsEmpty2</method-name>
          <method-params />
        </query-method>
        <ejb-ql>SELECT DISTINCT o.one_to_one FROM Order o WHERE o.lineItems IS EMPTY</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>ejbSelectMax1</method-name>
          <method-params />
        </query-method>
        <ejb-ql>SELECT MAX(o.balance) FROM Order o</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>ejbSelectSum1</method-name>
          <method-params />
        </query-method>
        <ejb-ql>SELECT SUM(l.order.balance) FROM LineItem l</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>ejbSelectMax2</method-name>
          <method-params />
        </query-method>
        <ejb-ql>SELECT MAX(o.orderId) FROM Order o</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>ejbSelectSetDistinctString</method-name>
          <method-params />
        </query-method>
        <ejb-ql>SELECT DISTINCT p.product_type FROM Product p</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>ejbSelectMax3</method-name>
          <method-params />
        </query-method>
        <ejb-ql>SELECT MAX(o.customer.firstname) FROM Order o</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findProductsDuplicates</method-name>
          <method-params />
        </query-method>
        <ejb-ql>SELECT OBJECT(p1) FROM Product p1, Product p2</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>ejbSelectAvg1</method-name>
          <method-params />
        </query-method>
        <ejb-ql>SELECT AVG(o.balance) FROM Order o</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>ejbSelectAvg2</method-name>
          <method-params />
        </query-method>
        <ejb-ql>SELECT AVG(DISTINCT o.balance) FROM Order o</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>ejbSelectOrderBy2</method-name>
          <method-params />
        </query-method>
        <ejb-ql>SELECT o.balance FROM Order o ORDER BY o.balance DESC</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>ejbSelectOrderBy3</method-name>
          <method-params />
        </query-method>
        <ejb-ql>SELECT p.product_type FROM Product p ORDER BY p.product_type</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>ejbSelectOrderBy1</method-name>
          <method-params />
        </query-method>
        <ejb-ql>SELECT o.balance FROM Order o ORDER BY o.balance</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>ejbSelectSum2</method-name>
          <method-params />
        </query-method>
        <ejb-ql>SELECT SUM(DISTINCT l.order.orderId) FROM LineItem l</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>ejbSelectSum3</method-name>
          <method-params />
        </query-method>
        <ejb-ql>SELECT SUM(l.order.orderId) FROM LineItem l</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>ejbSelectLocalReturnTypeMapping</method-name>
          <method-params />
        </query-method>
        <result-type-mapping>Local</result-type-mapping>
        <ejb-ql>SELECT OBJECT(p) FROM Product p WHERE p.productId = 1  AND p.product_type = 'soda'</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>ejbSelectOrderBy4</method-name>
          <method-params />
        </query-method>
        <ejb-ql>SELECT DISTINCT p.product_type FROM Product p ORDER BY p.product_type DESC</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findProduct</method-name>
          <method-params>
            <method-param>java.lang.Integer</method-param>
            <method-param>java.lang.String</method-param>
            <method-param>it is wrong</method-param>
          </method-params>
        </query-method>
        <ejb-ql>SELECT DISTINCT OBJECT(p) FROM Product p WHERE p.productId = ?1 AND p.product_type=?2</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>ejbSelectOrderBy5</method-name>
          <method-params />
        </query-method>
        <ejb-ql>SELECT o.ordernumber FROM Order o ORDER BY o.ordernumber</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findCompareRemote</method-name>
          <method-params>
            <method-param>ejbql.ProductRemote</method-param>
          </method-params>
        </query-method>
        <ejb-ql>SELECT DISTINCT o.one_to_one FROM Order o WHERE o.one_to_one = ?1</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>ejbSelectConcat3</method-name>
          <method-params />
        </query-method>
        <ejb-ql>SELECT p.productId FROM Product p WHERE CONCAT(p.product_type, 'soda') = CONCAT('soda', p.product_type)</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>ejbSelectConcat1</method-name>
          <method-params />
        </query-method>
        <ejb-ql>SELECT p.productId FROM Product p WHERE CONCAT('so', 'da') = p.product_type</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>ejbSelectConcat2</method-name>
          <method-params>
            <method-param>java.lang.String</method-param>
          </method-params>
        </query-method>
        <ejb-ql>SELECT p.productId FROM Product p WHERE CONCAT(?1, 'da') = p.product_type</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>ejbSelectSetNoDistinctString</method-name>
          <method-params />
        </query-method>
        <ejb-ql>SELECT p.product_type FROM Product p</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findUsingLikeEscape</method-name>
          <method-params />
        </query-method>
        <ejb-ql>SELECT DISTINCT OBJECT(p) FROM Product p WHERE p.product_type LIKE 's\_oda' ESCAPE '\'</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>ejbSelectCollectionNoDistinctEjb</method-name>
          <method-params />
        </query-method>
        <result-type-mapping>Remote</result-type-mapping>
        <ejb-ql>SELECT l.order FROM LineItem l</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findUsingLike</method-name>
          <method-params />
        </query-method>
        <ejb-ql>SELECT DISTINCT OBJECT(p) FROM Product p WHERE p.product_type LIKE '%oda'</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findUsingIsNull1</method-name>
          <method-params />
        </query-method>
        <ejb-ql>SELECT DISTINCT OBJECT(p) FROM Product p WHERE p.one_to_one IS NULL</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findUsingIsNull3</method-name>
          <method-params />
        </query-method>
        <ejb-ql>SELECT DISTINCT l.product FROM LineItem l WHERE l.product IS NOT NULL</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findUsingIsNull2</method-name>
          <method-params />
        </query-method>
        <ejb-ql>SELECT DISTINCT l.product FROM LineItem l WHERE l.product IS NULL</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>ejbSelectCount4</method-name>
          <method-params />
        </query-method>
        <ejb-ql>SELECT COUNT(o.byteArray) FROM Order o</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>ejbSelectCount5</method-name>
          <method-params />
        </query-method>
        <ejb-ql>SELECT COUNT(DISTINCT p) FROM Order o, IN (o.products) p</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>ejbSelectCount2</method-name>
          <method-params />
        </query-method>
        <ejb-ql>SELECT COUNT(DISTINCT l.order) FROM LineItem l</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>ejbSelectCount3</method-name>
          <method-params />
        </query-method>
        <ejb-ql>SELECT COUNT(o) FROM Order o</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findUsingMod1</method-name>
          <method-params>
            <method-param>int</method-param>
          </method-params>
        </query-method>
        <ejb-ql>SELECT OBJECT(p) FROM Product p WHERE MOD(3, ?1) = p.productId</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>ejbSelectCount1</method-name>
          <method-params />
        </query-method>
        <ejb-ql>SELECT COUNT(o.one_to_one) FROM Order o</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>ejbSelectNullResults2</method-name>
          <method-params />
        </query-method>
        <ejb-ql>SELECT o.byteArray FROM Order o</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>ejbSelectNullResults3</method-name>
          <method-params />
        </query-method>
        <ejb-ql>SELECT o.byteArray FROM Order o</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>ejbSelectNullResults1</method-name>
          <method-params />
        </query-method>
        <ejb-ql>SELECT o.byteArray FROM Order o</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findProductsDistinct</method-name>
          <method-params />
        </query-method>
        <ejb-ql>SELECT DISTINCT OBJECT(p1) FROM Product p1, Product p2</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>ejbSelectNoReturnTypeMapping</method-name>
          <method-params />
        </query-method>
        <ejb-ql>SELECT OBJECT(p) FROM Product p WHERE p.productId = 1  AND p.product_type = 'soda'</ejb-ql>
      </query>
    </entity>
    <entity>
      <display-name>AddressEJB</display-name>
      <ejb-name>AddressEJB</ejb-name>
      <local-home>ejbql.AddressHome</local-home>
      <local>ejbql.Address</local>
      <ejb-class>ejbql.AddressBean</ejb-class>
      <persistence-type>Container</persistence-type>
      <prim-key-class>java.lang.Integer</prim-key-class>
      <reentrant>false</reentrant>
      <cmp-version>2.x</cmp-version>
      <abstract-schema-name>Address</abstract-schema-name>
      <cmp-field>
        <field-name>addressId</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>phone</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>city</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>country</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>street</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>state</field-name>
      </cmp-field>
      <primkey-field>addressId</primkey-field>
      <security-identity>
        <description></description>
        <use-caller-identity></use-caller-identity>
      </security-identity>
    </entity>
    <entity>
      <display-name>CustomerEJB</display-name>
      <ejb-name>CustomerEJB</ejb-name>
      <local-home>ejbql.CustomerHome</local-home>
      <local>ejbql.Customer</local>
      <ejb-class>ejbql.CustomerBean</ejb-class>
      <persistence-type>Container</persistence-type>
      <prim-key-class>java.lang.Integer</prim-key-class>
      <reentrant>false</reentrant>
      <cmp-version>2.x</cmp-version>
      <abstract-schema-name>Customer</abstract-schema-name>
      <cmp-field>
        <field-name>firstname</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>customerId</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>lastname</field-name>
      </cmp-field>
      <primkey-field>customerId</primkey-field>
      <security-identity>
        <description></description>
        <use-caller-identity></use-caller-identity>
      </security-identity>
      <query>
        <description></description>
        <query-method>
          <method-name>findByFoo</method-name>
          <method-params />
        </query-method>
        <ejb-ql>SELECT DISTINCT OBJECT(c) FROM Customer c</ejb-ql>
      </query>
    </entity>
    <entity>
      <display-name>OrderEJB</display-name>
      <ejb-name>OrderEJB</ejb-name>
      <home>ejbql.OrderHomeRemote</home>
      <remote>ejbql.OrderRemote</remote>
      <local-home>ejbql.OrderHome</local-home>
      <local>ejbql.Order</local>
      <ejb-class>ejbql.OrderBean</ejb-class>
      <persistence-type>Container</persistence-type>
      <prim-key-class>java.lang.Integer</prim-key-class>
      <reentrant>false</reentrant>
      <cmp-version>2.x</cmp-version>
      <abstract-schema-name>Order</abstract-schema-name>
      <cmp-field>
        <field-name>balance</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>chara</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>quantity</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>orderId</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>ordernumber</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>ttrue</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>byteArray</field-name>
      </cmp-field>
      <primkey-field>orderId</primkey-field>
      <ejb-local-ref>
        <ejb-ref-name>ejb/OrderRef</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <local-home>ejbql.OrderHome</local-home>
        <local>ejbql.Order</local>
        <ejb-link>OrderEJB</ejb-link>
      </ejb-local-ref>
    <ejb-local-ref>
        <ejb-ref-name>ejb/OrderRef</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <local-home>ejbql.OrderHome</local-home>
        <local>ejbql.Order</local>
        <ejb-link>OrderEJB</ejb-link>
      </ejb-local-ref>
  
      <security-identity>
        <description></description>
        <use-caller-identity></use-caller-identity>
      </security-identity>
      <query>
        <description></description>
        <query-method>
          <method-name>findOrderByCustomer</method-name>
          <method-params>
            <method-param>ejbql.Customer</method-param>
          </method-params>
        </query-method>
        <ejb-ql>SELECT DISTINCT OBJECT(o) FROM Order AS o</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findSomething</method-name>
          <method-params>
            <method-param>java.lang.String</method-param>
            <method-param>int</method-param>
          </method-params>
        </query-method>
        <ejb-ql>SELECT DISTINCT OBJECT(o) FROM Order AS o</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>ejbSelectSingleLong</method-name>
          <method-params />
        </query-method>
        <ejb-ql>SELECT COUNT(o) FROM Order o</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findUsingInInputParam</method-name>
          <method-params>
            <method-param>java.lang.String</method-param>
          </method-params>
        </query-method>
        <ejb-ql>SELECT OBJECT(o) FROM Order o WHERE o.customer.firstname IN ('foo', ?1)</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>ejbSelectReturningSet</method-name>
          <method-params>
            <method-param>double</method-param>
          </method-params>
        </query-method>
        <ejb-ql>SELECT p.product_type FROM Product p</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findTestInputArgsPrimitive</method-name>
          <method-params>
            <method-param>byte</method-param>
            <method-param>short</method-param>
            <method-param>int</method-param>
            <method-param>long</method-param>
            <method-param>float</method-param>
            <method-param>double</method-param>
            <method-param>boolean</method-param>
          </method-params>
        </query-method>
        <ejb-ql>SELECT DISTINCT OBJECT(o) FROM Order o</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>ejbSelectSingleString</method-name>
          <method-params>
            <method-param>int</method-param>
            <method-param>double</method-param>
          </method-params>
        </query-method>
        <ejb-ql>SELECT o.customer.firstname FROM Order AS o WHERE (o.one_to_one.name = 'pepsi''s')</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>ejbSelectOrderByCustomer</method-name>
          <method-params>
            <method-param>ejbql.Customer</method-param>
          </method-params>
        </query-method>
        <result-type-mapping>Local</result-type-mapping>
        <ejb-ql>SELECT OBJECT(o) FROM Order o</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>ejbSelectSingleByteArray</method-name>
          <method-params />
        </query-method>
        <ejb-ql>SELECT o.byteArray FROM Order o WHERE o.orderId = 1</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findOrderByProduct</method-name>
          <method-params>
            <method-param>ejbql.ProductRemote</method-param>
            <method-param>int</method-param>
            <method-param>java.lang.String</method-param>
            <method-param>java.lang.String</method-param>
          </method-params>
        </query-method>
        <ejb-ql>SELECT DISTINCT OBJECT(o) FROM Order AS o</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>ejbSelectReturningCollection</method-name>
          <method-params>
            <method-param>double</method-param>
          </method-params>
        </query-method>
        <ejb-ql>SELECT p.product_type FROM Product p</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>ejbSelectSingleCustomer</method-name>
          <method-params>
            <method-param>int</method-param>
          </method-params>
        </query-method>
        <ejb-ql>SELECT OBJECT(o) FROM Order o</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>ejbSelectByteArray</method-name>
          <method-params />
        </query-method>
        <ejb-ql>SELECT o.byteArray FROM Order o WHERE o.billing_address MEMBER OF o.many_to_many</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>ejbSelectByLineItem</method-name>
          <method-params>
            <method-param>ejbql.LineItem</method-param>
          </method-params>
        </query-method>
        <ejb-ql>SELECT o.customer.firstname FROM Order o</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findTestIndependence1</method-name>
          <method-params />
        </query-method>
        <ejb-ql>SELECT OBJECT(o) FROM Order o WHERE o.sampleLineItem.quantity &gt;= 0 OR o.orderId = 1</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>ejbSelectSingleInt</method-name>
          <method-params />
        </query-method>
        <ejb-ql>SELECT o.balance FROM Order o WHERE o.orderId = 2</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findTestIndependence2</method-name>
          <method-params />
        </query-method>
        <ejb-ql>SELECT OBJECT(o) FROM Order o WHERE (o.one_to_one.product_type = 'soda' AND o.orderId = 3) OR o.orderId = 2</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>ejbSelectLotsOfParams</method-name>
          <method-params>
            <method-param>char</method-param>
            <method-param>java.lang.Character</method-param>
            <method-param>boolean</method-param>
            <method-param>java.lang.Boolean</method-param>
            <method-param>java.lang.String</method-param>
            <method-param>double</method-param>
            <method-param>java.lang.Double</method-param>
            <method-param>long</method-param>
            <method-param>java.lang.Long</method-param>
          </method-params>
        </query-method>
        <ejb-ql>SELECT AVG(o.orderId) FROM Order o</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>findTestInputArgsWrapper</method-name>
          <method-params>
            <method-param>java.lang.Byte</method-param>
            <method-param>java.lang.Short</method-param>
            <method-param>java.lang.Integer</method-param>
            <method-param>java.lang.Long</method-param>
            <method-param>java.lang.Float</method-param>
            <method-param>java.lang.Double</method-param>
            <method-param>java.lang.Boolean</method-param>
          </method-params>
        </query-method>
        <ejb-ql>SELECT DISTINCT OBJECT(o) FROM Order o</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>ejbSelectOrderByCustomerRemote</method-name>
          <method-params>
            <method-param>ejbql.Customer</method-param>
          </method-params>
        </query-method>
        <result-type-mapping>Remote</result-type-mapping>
        <ejb-ql>SELECT OBJECT(o) FROM Order AS o</ejb-ql>
      </query>
      <query>
        <description></description>
        <query-method>
          <method-name>ejbSelectSingleBoolean</method-name>
          <method-params />
        </query-method>
        <ejb-ql>SELECT o.ttrue FROM Order o WHERE o.ttrue = FALSE</ejb-ql>
      </query>
    </entity>
  </enterprise-beans>
  <relationships>
    <ejb-relation>
      <ejb-relation-name>foo</ejb-relation-name>
      <ejb-relationship-role>
        <ejb-relationship-role-name>foobar</ejb-relationship-role-name>
        <multiplicity>Many</multiplicity>
        <relationship-role-source>
          <ejb-name>NonExistingEJB</ejb-name>
        </relationship-role-source>
        <cmr-field>
          <cmr-field-name>products</cmr-field-name>
          <cmr-field-type>java.util.Collection</cmr-field-type>
        </cmr-field>
      </ejb-relationship-role>
      <ejb-relationship-role>
        <ejb-relationship-role-name>xx</ejb-relationship-role-name>
        <multiplicity>Many</multiplicity>
        <relationship-role-source>
          <ejb-name>ProductEJB</ejb-name>
        </relationship-role-source>
      </ejb-relationship-role>
    </ejb-relation>
    <ejb-relation>
      <ejb-relation-name>foo</ejb-relation-name>
      <ejb-relationship-role>
        <ejb-relationship-role-name>foobar</ejb-relationship-role-name>
        <multiplicity>One</multiplicity>
        <relationship-role-source>
          <ejb-name>OrderEJB</ejb-name>
        </relationship-role-source>
        <cmr-field>
          <cmr-field-name>lineItems</cmr-field-name>
          <cmr-field-type>java.util.Collection</cmr-field-type>
        </cmr-field>
      </ejb-relationship-role>
      <ejb-relationship-role>
        <ejb-relationship-role-name>LineItemEJB-OrderEJB</ejb-relationship-role-name>
        <multiplicity>Many</multiplicity>
        <cascade-delete />
        <relationship-role-source>
          <ejb-name>LineItemEJB</ejb-name>
        </relationship-role-source>
        <cmr-field>
          <cmr-field-name>order</cmr-field-name>
        </cmr-field>
      </ejb-relationship-role>
    </ejb-relation>
    <ejb-relation>
      <ejb-relationship-role>
        <ejb-relationship-role-name>ProductEJB-OrderEJB</ejb-relationship-role-name>
        <multiplicity>One</multiplicity>
        <relationship-role-source>
          <ejb-name>ProductEJB</ejb-name>
        </relationship-role-source>
        <cmr-field>
          <cmr-field-name>one_to_one</cmr-field-name>
        </cmr-field>
      </ejb-relationship-role>
      <ejb-relationship-role>
        <ejb-relationship-role-name>OrderEJB-ProductEJB</ejb-relationship-role-name>
        <multiplicity>One</multiplicity>
        <relationship-role-source>
          <ejb-name>OrderEJB</ejb-name>
        </relationship-role-source>
        <cmr-field>
          <cmr-field-name>one_to_one</cmr-field-name>
        </cmr-field>
      </ejb-relationship-role>
    </ejb-relation>
    <ejb-relation>
      <ejb-relationship-role>
        <ejb-relationship-role-name>OrderEJB-AddressEJB</ejb-relationship-role-name>
        <multiplicity>Many</multiplicity>
        <relationship-role-source>
          <ejb-name>OrderEJB</ejb-name>
        </relationship-role-source>
        <cmr-field>
          <cmr-field-name>shipping_address</cmr-field-name>
        </cmr-field>
      </ejb-relationship-role>
      <ejb-relationship-role>
        <ejb-relationship-role-name>AddressEJB-OrderEJB</ejb-relationship-role-name>
        <multiplicity>One</multiplicity>
        <relationship-role-source>
          <ejb-name>AddressEJB</ejb-name>
        </relationship-role-source>
      </ejb-relationship-role>
    </ejb-relation>
    <ejb-relation>
      <ejb-relationship-role>
        <ejb-relationship-role-name>OrderEJB-CustomerEJB</ejb-relationship-role-name>
        <multiplicity>Many</multiplicity>
        <relationship-role-source>
          <ejb-name>OrderEJB</ejb-name>
        </relationship-role-source>
        <cmr-field>
          <cmr-field-name>customer</cmr-field-name>
        </cmr-field>
      </ejb-relationship-role>
      <ejb-relationship-role>
        <ejb-relationship-role-name>CustomerEJB-OrderEJB</ejb-relationship-role-name>
        <multiplicity>One</multiplicity>
        <relationship-role-source>
          <ejb-name>CustomerEJB</ejb-name>
        </relationship-role-source>
      </ejb-relationship-role>
    </ejb-relation>
    <ejb-relation>
      <ejb-relationship-role>
        <ejb-relationship-role-name>OrderEJB-LineItemEJB</ejb-relationship-role-name>
        <multiplicity>Many</multiplicity>
        <relationship-role-source>
          <ejb-name>OrderEJB</ejb-name>
        </relationship-role-source>
        <cmr-field>
          <cmr-field-name>sampleLineItem</cmr-field-name>
        </cmr-field>
      </ejb-relationship-role>
      <ejb-relationship-role>
        <ejb-relationship-role-name>LineItemEJB-OrderEJB</ejb-relationship-role-name>
        <multiplicity>One</multiplicity>
        <relationship-role-source>
          <ejb-name>LineItemEJB</ejb-name>
        </relationship-role-source>
      </ejb-relationship-role>
    </ejb-relation>
    <ejb-relation>
      <ejb-relationship-role>
        <ejb-relationship-role-name>AddressEJB-OrderEJB</ejb-relationship-role-name>
        <multiplicity>Many</multiplicity>
        <relationship-role-source>
          <ejb-name>AddressEJB</ejb-name>
        </relationship-role-source>
        <cmr-field>
          <cmr-field-name>many_to_many</cmr-field-name>
          <cmr-field-type>java.util.Collection</cmr-field-type>
        </cmr-field>
      </ejb-relationship-role>
      <ejb-relationship-role>
        <ejb-relationship-role-name>OrderEJB-AddressEJB</ejb-relationship-role-name>
        <multiplicity>Many</multiplicity>
        <relationship-role-source>
          <ejb-name>OrderEJB</ejb-name>
        </relationship-role-source>
        <cmr-field>
          <cmr-field-name>many_to_many</cmr-field-name>
          <cmr-field-type>java.util.Collection</cmr-field-type>
        </cmr-field>
      </ejb-relationship-role>
    </ejb-relation>
    <ejb-relation>
      <ejb-relationship-role>
        <ejb-relationship-role-name>OrderEJB-AddressEJB</ejb-relationship-role-name>
        <multiplicity>Many</multiplicity>
        <relationship-role-source>
          <ejb-name>OrderEJB</ejb-name>
        </relationship-role-source>
        <cmr-field>
          <cmr-field-name>billing_address</cmr-field-name>
        </cmr-field>
      </ejb-relationship-role>
      <ejb-relationship-role>
        <ejb-relationship-role-name>AddressEJB-OrderEJB</ejb-relationship-role-name>
        <multiplicity>One</multiplicity>
        <relationship-role-source>
          <ejb-name>AddressEJB</ejb-name>
        </relationship-role-source>
      </ejb-relationship-role>
    </ejb-relation>
    <ejb-relation>
      <ejb-relationship-role>
        <ejb-relationship-role-name>LineItemEJB-ProductEJB</ejb-relationship-role-name>
        <multiplicity>Many</multiplicity>
        <relationship-role-source>
          <ejb-name>LineItemEJB</ejb-name>
        </relationship-role-source>
        <cmr-field>
          <cmr-field-name>product</cmr-field-name>
        </cmr-field>
      </ejb-relationship-role>
      <ejb-relationship-role>
        <ejb-relationship-role-name>ProductEJB-LineItemEJB</ejb-relationship-role-name>
        <multiplicity>One</multiplicity>
        <relationship-role-source>
          <ejb-name>ProductEJB</ejb-name>
        </relationship-role-source>
      </ejb-relationship-role>
    </ejb-relation>
  </relationships>
  <assembly-descriptor>
    <security-role>
      <role-name>Manager</role-name>
    </security-role>
    <security-role>
      <role-name>Administrator</role-name>
    </security-role>
    <security-role>
      <role-name>Employee</role-name>
    </security-role>
    <container-transaction>
      <method>
        <ejb-name>PopulateEJB</ejb-name>
        <method-intf>Remote</method-intf>
        <method-name>unpopulate</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>PopulateEJB</ejb-name>
        <method-intf>Remote</method-intf>
        <method-name>testLocalInterfaces</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>PopulateEJB</ejb-name>
        <method-intf>Remote</method-intf>
        <method-name>doPopulate</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>LineItemEJB</ejb-name>
        <method-intf>LocalHome</method-intf>
        <method-name>create</method-name>
        <method-params>
          <method-param>java.lang.Integer</method-param>
          <method-param>boolean</method-param>
          <method-param>ejbql.DependentValueFoo</method-param>
          <method-param>int</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>LineItemEJB</ejb-name>
        <method-intf>LocalHome</method-intf>
        <method-name>remove</method-name>
        <method-params>
          <method-param>java.lang.Object</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>LineItemEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>remove</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>LineItemEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>setProduct</method-name>
        <method-params>
          <method-param>ejbql.Product</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>LineItemEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>setOrder</method-name>
        <method-params>
          <method-param>ejbql.Order</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>LineItemEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>getLineitemId</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>LineItemEJB</ejb-name>
        <method-intf>LocalHome</method-intf>
        <method-name>findByPrimaryKey</method-name>
        <method-params>
          <method-param>java.lang.Integer</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findProductsDistinct</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>LocalHome</method-intf>
        <method-name>findProduct</method-name>
        <method-params>
          <method-param>java.lang.Integer</method-param>
          <method-param>java.lang.String</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findProduct</method-name>
        <method-params>
          <method-param>java.lang.Integer</method-param>
          <method-param>java.lang.String</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findProductsLikeInputParam2</method-name>
        <method-params>
          <method-param>java.lang.String</method-param>
          <method-param>char</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>LocalHome</method-intf>
        <method-name>remove</method-name>
        <method-params>
          <method-param>java.lang.Object</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>remove</method-name>
        <method-params>
          <method-param>java.lang.Object</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findUsingIsEmpty3</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findUsingIsEmpty2</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findUsingIsEmpty1</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>selectNullResults3</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>selectNullResults2</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>selectNullResults1</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>selectLocalReturnTypeMapping</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>selectNoReturnTypeMapping</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>selectOrderBy5</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>selectOrderBy4</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>selectOrderBy3</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>selectConcat2</method-name>
        <method-params>
          <method-param>java.lang.String</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>LocalHome</method-intf>
        <method-name>create</method-name>
        <method-params>
          <method-param>java.lang.Integer</method-param>
          <method-param>java.lang.String</method-param>
          <method-param>int</method-param>
          <method-param>java.lang.String</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>selectOrderBy2</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>selectOrderBy1</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>selectSingleValuedCmrNull1</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>selectCollectionDistinctString</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findCompareRemote</method-name>
        <method-params>
          <method-param>ejbql.ProductRemote</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>remove</method-name>
        <method-params>
          <method-param>jakarta.ejb.Handle</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findUsingLike</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findOrderBy4</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findOrderBy3</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findOrderBy2</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findOrderBy1</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findUsingIn2</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findUsingIn1</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>setOne_to_one</method-name>
        <method-params>
          <method-param>ejbql.Order</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>selectSetDistinctString</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findInputParamIsNull2</method-name>
        <method-params>
          <method-param>int</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>selectAvg2</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>selectAvg1</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>selectCollectionNoDistinctEjb</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findUsingMemberOf6</method-name>
        <method-params>
          <method-param>ejbql.ProductRemote</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findUsingMemberOf5</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findUsingMemberOf4</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findUsingMemberOf3</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findUsingMemberOf2</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>selectSetNoDistinctEjb</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findUsingMemberOf1</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>callFindProductLocal</method-name>
        <method-params>
          <method-param>java.lang.Integer</method-param>
          <method-param>java.lang.String</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findProductsDuplicates</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>selectCollectionNoDistinctString</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findProductsLikeInputParam1</method-name>
        <method-params>
          <method-param>java.lang.String</method-param>
          <method-param>java.lang.Character</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>selectMax3</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>selectMax2</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>selectCollectionDistinctEjb</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>selectMax1</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findInputParamIsNull1</method-name>
        <method-params>
          <method-param>java.lang.String</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>LocalHome</method-intf>
        <method-name>findByPrimaryKey</method-name>
        <method-params>
          <method-param>ejbql.ProductPrimaryKey</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findByPrimaryKey</method-name>
        <method-params>
          <method-param>ejbql.ProductPrimaryKey</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Remote</method-intf>
        <method-name>getName</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>selectCount8</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>selectCount7</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>selectCount6</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>selectCount5</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>selectCount4</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>selectConcat3</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>selectCount3</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>selectCount2</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>selectSetDistinctEjb</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>selectConcat1</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>selectCount1</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>remove</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Remote</method-intf>
        <method-name>remove</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>selectRemoteReturnTypeMapping</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Remote</method-intf>
        <method-name>selectSchemaEquality3</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>selectSetNoDistinctString</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Remote</method-intf>
        <method-name>selectSchemaEquality2</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findUsingMod1</method-name>
        <method-params>
          <method-param>int</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>selectSchemaEquality1</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findUsingIsNull3</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findUsingIsNull2</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findUsingIsNull1</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findUsingLikeEscape</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>selectSum3</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>selectSum2</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>selectSum1</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Remote</method-intf>
        <method-name>setName</method-name>
        <method-params>
          <method-param>java.lang.String</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>selectMin3</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>selectMin2</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>selectMin1</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ProductEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>selectSingleNullResult</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>AddressEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>setMany_to_many</method-name>
        <method-params>
          <method-param>java.util.Collection</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>AddressEJB</ejb-name>
        <method-intf>LocalHome</method-intf>
        <method-name>create</method-name>
        <method-params>
          <method-param>java.lang.Integer</method-param>
          <method-param>java.lang.String</method-param>
          <method-param>java.lang.String</method-param>
          <method-param>java.lang.String</method-param>
          <method-param>java.lang.String</method-param>
          <method-param>java.lang.String</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>AddressEJB</ejb-name>
        <method-intf>LocalHome</method-intf>
        <method-name>remove</method-name>
        <method-params>
          <method-param>java.lang.Object</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>AddressEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>remove</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>AddressEJB</ejb-name>
        <method-intf>LocalHome</method-intf>
        <method-name>findByPrimaryKey</method-name>
        <method-params>
          <method-param>java.lang.Integer</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>LocalHome</method-intf>
        <method-name>create</method-name>
        <method-params>
          <method-param>java.lang.Integer</method-param>
          <method-param>java.lang.String</method-param>
          <method-param>java.lang.String</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>LocalHome</method-intf>
        <method-name>remove</method-name>
        <method-params>
          <method-param>java.lang.Object</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>remove</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>LocalHome</method-intf>
        <method-name>findByFoo</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerEJB</ejb-name>
        <method-intf>LocalHome</method-intf>
        <method-name>findByPrimaryKey</method-name>
        <method-params>
          <method-param>java.lang.Integer</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OrderEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>remove</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OrderEJB</ejb-name>
        <method-intf>Remote</method-intf>
        <method-name>remove</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OrderEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findTestInputArgsWrapper</method-name>
        <method-params>
          <method-param>java.lang.Byte</method-param>
          <method-param>java.lang.Short</method-param>
          <method-param>java.lang.Integer</method-param>
          <method-param>java.lang.Long</method-param>
          <method-param>java.lang.Float</method-param>
          <method-param>java.lang.Double</method-param>
          <method-param>java.lang.Boolean</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OrderEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findByPrimaryKey</method-name>
        <method-params>
          <method-param>java.lang.Integer</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OrderEJB</ejb-name>
        <method-intf>LocalHome</method-intf>
        <method-name>findByPrimaryKey</method-name>
        <method-params>
          <method-param>java.lang.Integer</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OrderEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>setOne_to_one</method-name>
        <method-params>
          <method-param>ejbql.Product</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OrderEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>getMany_to_many</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OrderEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>remove</method-name>
        <method-params>
          <method-param>jakarta.ejb.Handle</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OrderEJB</ejb-name>
        <method-intf>Remote</method-intf>
        <method-name>selectIntegerFromOrder</method-name>
        <method-params>
          <method-param>int</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OrderEJB</ejb-name>
        <method-intf>LocalHome</method-intf>
        <method-name>create</method-name>
        <method-params>
          <method-param>java.lang.Integer</method-param>
          <method-param>java.lang.Integer</method-param>
          <method-param>int</method-param>
          <method-param>boolean</method-param>
          <method-param>java.lang.Integer</method-param>
          <method-param>byte[]</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OrderEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findTestInputArgsPrimitive</method-name>
        <method-params>
          <method-param>byte</method-param>
          <method-param>short</method-param>
          <method-param>int</method-param>
          <method-param>long</method-param>
          <method-param>float</method-param>
          <method-param>double</method-param>
          <method-param>boolean</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OrderEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>setShipping_address</method-name>
        <method-params>
          <method-param>ejbql.Address</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OrderEJB</ejb-name>
        <method-intf>Remote</method-intf>
        <method-name>selectWithoutDuplicates</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OrderEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>setMany_to_many</method-name>
        <method-params>
          <method-param>java.util.Collection</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OrderEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findUsingInInputParam</method-name>
        <method-params>
          <method-param>java.lang.String</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OrderEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>getShipping_address</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OrderEJB</ejb-name>
        <method-intf>Remote</method-intf>
        <method-name>selectWithDuplicates</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OrderEJB</ejb-name>
        <method-intf>Remote</method-intf>
        <method-name>selectSingleString</method-name>
        <method-params>
          <method-param>int</method-param>
          <method-param>double</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OrderEJB</ejb-name>
        <method-intf>Remote</method-intf>
        <method-name>selectSingleInt</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OrderEJB</ejb-name>
        <method-intf>Remote</method-intf>
        <method-name>returnBalance</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OrderEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>getLineItems</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OrderEJB</ejb-name>
        <method-intf>Remote</method-intf>
        <method-name>getBalance</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OrderEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>getBilling_address</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OrderEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>g</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OrderEJB</ejb-name>
        <method-intf>Remote</method-intf>
        <method-name>debit</method-name>
        <method-params>
          <method-param>int</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OrderEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>f</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OrderEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>e</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OrderEJB</ejb-name>
        <method-intf>Remote</method-intf>
        <method-name>credit</method-name>
        <method-params>
          <method-param>int</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OrderEJB</ejb-name>
        <method-intf>Remote</method-intf>
        <method-name>selectSingleBoolean</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OrderEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>d</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OrderEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>executeHomeMethod</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OrderEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>c</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OrderEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>b</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OrderEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>a</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OrderEJB</ejb-name>
        <method-intf>Remote</method-intf>
        <method-name>setBalance</method-name>
        <method-params>
          <method-param>int</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OrderEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findOrderByProduct</method-name>
        <method-params>
          <method-param>ejbql.ProductRemote</method-param>
          <method-param>int</method-param>
          <method-param>java.lang.String</method-param>
          <method-param>java.lang.String</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OrderEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findTestIndependence2</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OrderEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findTestIndependence1</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OrderEJB</ejb-name>
        <method-intf>Remote</method-intf>
        <method-name>selectSingleByteArray</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OrderEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findSomething</method-name>
        <method-params>
          <method-param>java.lang.String</method-param>
          <method-param>int</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OrderEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>setBilling_address</method-name>
        <method-params>
          <method-param>ejbql.Address</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OrderEJB</ejb-name>
        <method-intf>LocalHome</method-intf>
        <method-name>remove</method-name>
        <method-params>
          <method-param>java.lang.Object</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OrderEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>remove</method-name>
        <method-params>
          <method-param>java.lang.Object</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OrderEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>setLineItems</method-name>
        <method-params>
          <method-param>java.util.Collection</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OrderEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>setSampleLineItem</method-name>
        <method-params>
          <method-param>ejbql.LineItem</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OrderEJB</ejb-name>
        <method-intf>Remote</method-intf>
        <method-name>selectByteArray</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OrderEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>getProducts</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OrderEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>setCustomer</method-name>
        <method-params>
          <method-param>ejbql.Customer</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OrderEJB</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>setProducts</method-name>
        <method-params>
          <method-param>java.util.Collection</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OrderEJB</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findOrderByCustomer</method-name>
        <method-params>
          <method-param>ejbql.Customer</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
  </assembly-descriptor>
</ejb-jar>
<?validateAgainst ejb-jar_5_0.xsd?>
<?expectError 43:cvc-identity-constraint.4.1?>
<?expectError 99:cvc-identity-constraint.4.2.2?>
<?expectError 118:cvc-identity-constraint.4.1?>
<?expectError 130:cvc-identity-constraint.4.1?>
<?expectError 161:cvc-enumeration-valid?>
<?expectError 161:cvc-complex-type.2.2?>
<?expectError 224:cvc-identity-constraint.4.1?>
<?expectError 236:cvc-identity-constraint.4.1?>
<?expectError 272:cvc-identity-constraint.4.1?>
<?expectError 284:cvc-identity-constraint.4.1?>
<?expectError 759:cvc-pattern-valid?>
<?expectError 759:cvc-complex-type.2.2?>
<?expectError 1068:cvc-identity-constraint.4.1?>
<?expectError 1327:cvc-identity-constraint.4.1?>
<?expectError 3078:cvc-identity-constraint.4.3?>
<?expectError 3078:cvc-identity-constraint.4.3?>
